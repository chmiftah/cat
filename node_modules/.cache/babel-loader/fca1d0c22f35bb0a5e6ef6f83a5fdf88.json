{"ast":null,"code":"var _jsxFileName = \"/home/tonjoo/react/dashboard-v5-cra/src/dashboard/provider/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom'; // create new context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext({});\nexport default function DashboardProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const ref = React.useRef(null);\n  const history = useHistory();\n  const toggle = React.useCallback(() => {\n    setOpen(prevState => !prevState);\n  }, []); // set the html tag style overflow to hidden\n\n  React.useEffect(() => {\n    document.documentElement.style.overflow = 'hidden';\n  }, []); // close side navigation when you click on a sidenav item.\n\n  React.useEffect(() => {\n    return history.listen(() => {\n      if (open) {\n        setOpen(false);\n      }\n    });\n  }, [history, open]); // close side navigation on click outside\n\n  React.useEffect(() => {\n    const handleOutsideClick = event => {\n      var _ref$current;\n\n      if (!((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target))) {\n        if (!open) return;\n        setOpen(false);\n      }\n    };\n\n    window.addEventListener('click', handleOutsideClick);\n    return () => window.removeEventListener('click', handleOutsideClick);\n  }, [open, ref]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      open,\n      ref,\n      toggle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n} // custom hook to consume all context values { open, ref, toggle }\n\n_s(DashboardProvider, \"IrVtA+KNBPdnViup10w+TW5HvzQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = DashboardProvider;\nexport function useToggle() {\n  _s2();\n\n  return React.useContext(Context);\n}\n\n_s2(useToggle, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardProvider\");","map":{"version":3,"sources":["/home/tonjoo/react/dashboard-v5-cra/src/dashboard/provider/context.js"],"names":["React","useHistory","Context","createContext","DashboardProvider","children","open","setOpen","useState","ref","useRef","history","toggle","useCallback","prevState","useEffect","document","documentElement","style","overflow","listen","handleOutsideClick","event","current","contains","target","window","addEventListener","removeEventListener","useToggle","useContext"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;;AACA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAAhB;AAEA,eAAe,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,GAAG,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAb,CAAZ;AACA,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AAEA,QAAMW,MAAM,GAAGZ,KAAK,CAACa,WAAN,CAAkB,MAAM;AACrCN,IAAAA,OAAO,CAAEO,SAAD,IAAe,CAACA,SAAjB,CAAP;AACD,GAFc,EAEZ,EAFY,CAAf,CALsD,CAStD;;AACAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,QAA/B,GAA0C,QAA1C;AACD,GAFD,EAEG,EAFH,EAVsD,CActD;;AACAnB,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,WAAOJ,OAAO,CAACS,MAAR,CAAe,MAAM;AAC1B,UAAId,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAJM,CAAP;AAKD,GAND,EAMG,CAACI,OAAD,EAAUL,IAAV,CANH,EAfsD,CAuBtD;;AACAN,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,UAAMM,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,UAAI,kBAACb,GAAG,CAACc,OAAL,iDAAC,aAAaC,QAAb,CAAsBF,KAAK,CAACG,MAA5B,CAAD,CAAJ,EAA0C;AACxC,YAAI,CAACnB,IAAL,EAAW;AACXC,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KALD;;AAMAmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCN,kBAAjC;AACA,WAAO,MAAMK,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCP,kBAApC,CAAb;AACD,GATD,EASG,CAACf,IAAD,EAAOG,GAAP,CATH;AAWA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAF;AAAQG,MAAAA,GAAR;AAAaG,MAAAA;AAAb,KAAzB;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;;GA1CwBD,iB;UAGNH,U;;;KAHMG,iB;AA2CxB,OAAO,SAASyB,SAAT,GAAqB;AAAA;;AAC1B,SAAO7B,KAAK,CAAC8B,UAAN,CAAiB5B,OAAjB,CAAP;AACD;;IAFe2B,S","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// create new context\nconst Context = React.createContext({});\n\nexport default function DashboardProvider({ children }) {\n  const [open, setOpen] = React.useState(false);\n  const ref = React.useRef(null);\n  const history = useHistory();\n\n  const toggle = React.useCallback(() => {\n    setOpen((prevState) => !prevState);\n  }, []);\n\n  // set the html tag style overflow to hidden\n  React.useEffect(() => {\n    document.documentElement.style.overflow = 'hidden';\n  }, []);\n\n  // close side navigation when you click on a sidenav item.\n  React.useEffect(() => {\n    return history.listen(() => {\n      if (open) {\n        setOpen(false);\n      }\n    });\n  }, [history, open]);\n\n  // close side navigation on click outside\n  React.useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (!ref.current?.contains(event.target)) {\n        if (!open) return;\n        setOpen(false);\n      }\n    };\n    window.addEventListener('click', handleOutsideClick);\n    return () => window.removeEventListener('click', handleOutsideClick);\n  }, [open, ref]);\n\n  return (\n    <Context.Provider value={{ open, ref, toggle }}>\n      {children}\n    </Context.Provider>\n  );\n}\n\n// custom hook to consume all context values { open, ref, toggle }\nexport function useToggle() {\n  return React.useContext(Context);\n}\n"]},"metadata":{},"sourceType":"module"}